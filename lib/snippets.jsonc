{
  "Nixix Functional Component": {
    "prefix": "edfc",
    "body": "const ${1:${TM_FILENAME_BASE}} = (${2:props}) => {\n\treturn (\n\t\t${3:<div />}\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}};",
    "scope": "typescriptreact,javascriptreact",
    "description": "Functional Component to return JSX."
  },
  "callSignalSnippet": {
    "prefix": "callSignalSnippet",
    "body": "const [${1:initValue}, set${1/(.*)/${1:/capitalize}/}] = callSignal(${2:value});",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "description": "callSignal snippet"
  },
  "callStoreSnippet": {
    "prefix": "callStoreSnippet",
    "body": "const [${1:initValue}, set${1/(.*)/${1:/capitalize}/}] = callStore(${2:objectOrArray});",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "description": "callStore snippet"
  },
  "callRefSnippet": {
    "prefix": "callRefSnippet",
    "body": "const ${1:ref} = callRef($2)$0",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "description": "callRef snippet"
  },
  "effectSnippet": {
    "prefix": "effectSnippet",
    "body": "effect(() => {\n\t\t$1\n\t},\n\t${2|'once',null|},\n\t[${3:furtherDependents}]\n)",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "description": "effect snippet"
  },
  "renderEffectSnippet": {
    "prefix": "renderEffectSnippet",
    "body": "renderEffect(() => {\n\t\t$1\n\t},\n\t${2|'once',null|},\n\t[${3:furtherDependents}]\n)",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "description": "renderEffect snippet"
  },

  // HOC 

  // async values
  "asyncComponentTS": {
    "prefix": "asyncComponent",
    "body": "type AsyncProps = {$1};\n\nconst ${2:Component} = asyncComponent<AsyncProps>(${3:async} (${4:props}) => {\n\treturn $5\n});",
    "scope": "typescriptreact",
    "description": "Component that asynchronously returns some JSX"
  },
  "asyncComponentJS": {
    "prefix": "asyncComponent",
    "body": "const ${1:Component} = asyncComponent((${2:props}) => {\n\treturn $3\n});",
    "scope": "javsscriptreact",
    "description": "Component that asynchronously returns some JSX"
  },
  "Suspense": {
    "prefix": "Suspense",
    "body": "<Suspense fallback={$1} onError={$2}>\n\t${3:<div />}\n</Suspense>",
    "scope": "typescriptreact,javascriptreact",
    "description": "Suspense Component"
  },
  // iteration
  "For": {
    "prefix": "For",
    "body": "<For each={${1:storeArray}} parent={${2:<div />}} fallback={${3:fallback}}>\n\t{\n\t\t(${4:props}) => {\n\t\t\treturn (\n\t\t\t\t${5:<div />}\n\t\t\t)\n\t\t}\n\t}\n</For>",
    "scope": "typescriptreact,javascriptreact",
    "description": "For Component"
  },
}














